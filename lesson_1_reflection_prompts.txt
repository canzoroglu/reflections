How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    
Viewing the difference between two versions helped me to see the bugs that
I introduced.


How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

    
If I make a mistake in the project in some point, I can go back the old-working
version of it and repair the error. Also, it is good for time planning of the project.


What do you think are the pros and cons of manually choosing when to create a
 commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    
Elle commit yapmanın avantajı kontrolün sende olmasıdır. Ama bu avantaj, eğer 
doğru zamanda commit yapmıyorsan dezavantaja dönüşebilir. Doğru zaman ise
mantıksal bir değişim yaptığın andır. Birbiriyle bağlantılı olmayan değişikliklerin
bir arada commit edilmesi commit büyüklüğünü arttırdığı gibi daha sonra bu versiyona
dönülmek istenip de özelliklerden biri aynen kullanılıp diğeri değiştirilecekse bunu
ayarlamak zaman kaybına neden olacaktır. Eğer her typo için ayrı commit yaparsak da 
bu sefer commit sayısı çoğalacağından aradığımızı bulmak zorlaşır.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    
Google Docs kod merkezli bir versiyon kontrol sistemi değil. Her döküman onun için ayrıdır.
Ama Git kod  merkezli olduğundan ve projede birbiriyle ilgili dosyalar olabileceğinde
bunların birlikte commit edilmesine izin verir. Git repository de bulunan dosyalar
birlikte commit edilmiş olur. Eğer dosyalardan sadece biri değişmişse diğerleri
önceki commit deki haliyle kalır.

How can you use the commands git log and git diff to view the history of files?

git log komutunu kullanarak yapılmış tüm commitleri görebilirim. git diff komutu ile
iki commit arasındaki farkı görebilirim.

git clone <url> ile varolan bir Git reposunu indirebilirim  

How might using version control make you more confident to make changes that
could break something?

Versiyon kontrol sayesinde proje aşamalarını bir mesaj ile commitlebildiğimden
ileride bug eklesem bile önceki haline dönebileceğimi bildiğimden, programın 
bozulması gibi bir endişem olmaz.

Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git to keep track of my projects and push them to GitHub.
